name: deploy container
on:
  # Can be manually triggered
  workflow_dispatch: {}
  # Trigger a deploy every time there is a merge to main
  push:
    branches:
      - main

env:
  # Set this to your AWS region, e.g. us-east-1
  AWS_REGION: ${{ secrets.AWS_REGION }}
  # Set this to the URI of your ECR repo
  NEWS_ECR_REPO_URI: ${{ secrets.NEWS_ECR_REPO_URI }}
  NEWS_SENTIMENT_ECR_REPO_URI: ${{ secrets.NEWS_SENTIMENT_ECR_REPO_URI }}
  STOCKS_ECR_REPO_URI: ${{ secrets.STOCKS_ECR_REPO_URI }}
  # Set this to the AWS role Github Actions will assume
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}

  CONTAINER_NAME: "app" # name of the container name in the task definition
jobs:
  deploy_to_ecs:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code repository in agent
        uses: actions/checkout@v4
        with:
          set-safe-directory: true

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: News - Build, tag, and push image to Amazon ECR
        id: build-news-image
        working-directory: ./extract_load/news
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          echo "Target repo: ${NEWS_ECR_REPO_URI}:${IMAGE_TAG}"
          docker build -t ${NEWS_ECR_REPO_URI}:${IMAGE_TAG} .
          docker push ${NEWS_ECR_REPO_URI}:${IMAGE_TAG}
          echo "image=${NEWS_ECR_REPO_URI}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: News Sentiment - Build, tag, and push image to Amazon ECR
        id: build-news-sentiment-image
        working-directory: ./extract_load/news_sentiment
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          echo "Target repo: ${NEWS_SENTIMENT_ECR_REPO_URI}:${IMAGE_TAG}"
          docker build -t ${NEWS_SENTIMENT_ECR_REPO_URI}:${IMAGE_TAG} .
          docker push ${NEWS_SENTIMENT_ECR_REPO_URI}:${IMAGE_TAG}
          echo "image=${NEWS_SENTIMENT_ECR_REPO_URI}:${IMAGE_TAG}" >> $GITHUB_OUTPUT

      - name: Stocks - Build, tag, and push image to Amazon ECR
        id: build-stocks-image
        working-directory: ./extract_load/stocks
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          echo "Target repo: ${STOCKS_ECR_REPO_URI}:${IMAGE_TAG}"
          docker build -t ${STOCKS_ECR_REPO_URI}:${IMAGE_TAG} .
          docker push ${STOCKS_ECR_REPO_URI}:${IMAGE_TAG}
          echo "image=${STOCKS_ECR_REPO_URI}:${IMAGE_TAG}" >> $GITHUB_OUTPUT
